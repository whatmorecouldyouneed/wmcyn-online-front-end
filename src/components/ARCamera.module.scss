.arCameraContainer {
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  width: 100vw !important;
  height: 100vh !important;
  z-index: 9999;
  background: #000;
  overflow: hidden !important;
  margin: 0 !important;
  padding: 0 !important;
  box-sizing: border-box !important;
  contain: layout style paint !important; // Prevent layout shifts
  transform: translateZ(0) !important; // Force hardware acceleration
  
  // iPhone safe area support for true fullscreen
  @supports (-webkit-touch-callout: none) {
    height: -webkit-fill-available;
    height: 100dvh !important; // dynamic viewport height for mobile
  }
}

// Landscape mode adjustments
@media (orientation: landscape) {
  .arCameraContainer {
    width: 100dvw !important;
    height: 100dvh !important;
  }

  .mountPoint {
    width: 100dvw !important;
    height: 100dvh !important;
  }

  .mountPoint video,
  .mountPoint canvas {
    width: 100dvw !important;
    height: 100dvh !important;
    object-fit: cover !important;
  }
}

.loadingOverlay {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 20px;
  z-index: 3;
  background-color: rgba(0, 0, 0, 0.75);
  padding: 20px;
  border-radius: 8px;
  backdrop-filter: blur(10px);
  pointer-events: none;
}



.mountPoint {
  position: absolute !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  bottom: 0 !important;
  width: 100vw !important;
  height: 100vh !important;
  max-width: 100vw !important;
  max-height: 100vh !important;
  min-width: 100vw !important;
  min-height: 100vh !important;
  z-index: 1;
  overflow: hidden !important;
  margin: 0 !important;
  padding: 0 !important;
  box-sizing: border-box !important;
  background: #000 !important; // Prevent flash of content
  contain: layout style paint !important; // Prevent layout shifts
  
  // ensure video element fills container properly and is visible
  video {
    width: 100vw !important;
    height: 100vh !important;
    max-width: 100vw !important;
    max-height: 100vh !important;
    min-width: 100vw !important;
    min-height: 100vh !important;
    object-fit: cover !important;
    position: absolute !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    bottom: 0 !important;
    margin: 0 !important;
    padding: 0 !important;
    box-sizing: border-box !important;
    z-index: 1 !important;
    background: #000 !important;
    display: block !important;
    contain: layout style paint !important; // Prevent layout shifts
  }
  
  // handle ar.js canvas elements - make sure they don't block video
  canvas {
    width: 100vw !important;
    height: 100vh !important;
    max-width: 100vw !important;
    max-height: 100vh !important;
    min-width: 100vw !important;
    min-height: 100vh !important;
    position: absolute !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    bottom: 0 !important;
    margin: 0 !important;
    padding: 0 !important;
    box-sizing: border-box !important;
    display: block !important;
  }
}

.closeButton {
  position: absolute !important;
  top: env(safe-area-inset-top, 20px) !important;
  right: env(safe-area-inset-right, 20px) !important;
  z-index: 10000 !important;
  padding: 12px 16px;
  font-size: 16px;
  cursor: pointer;
  background-color: rgba(0, 0, 0, 0.8);
  color: white;
  border: 2px solid rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  backdrop-filter: blur(10px);
  box-sizing: border-box;
  max-width: calc(100% - env(safe-area-inset-right, 20px) - 20px);
  pointer-events: auto !important;
  
  // responsive sizing for mobile devices
  @media (max-width: 768px) {
    top: calc(env(safe-area-inset-top, 20px) + 10px);
    right: calc(env(safe-area-inset-right, 20px) + 10px);
    padding: 10px 14px;
    font-size: 14px;
  }
  
  // landscape adjustments
  @media (orientation: landscape) {
    top: env(safe-area-inset-top, 10px);
    right: env(safe-area-inset-right, 10px);
    padding: 8px 12px;
    font-size: 14px;
  }
  
  &:hover {
    background-color: rgba(0, 0, 0, 0.9);
    border-color: rgba(255, 255, 255, 0.4);
  }
  
  &:active {
    transform: scale(0.95);
  }
} 